{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yoges\\\\OneDrive\\\\Desktop\\\\autosage\\\\autosage-frontend\\\\src\\\\pages\\\\GeminiChat.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Form, Button, Card, Spinner } from \"react-bootstrap\";\nfunction GeminiChat() {\n  const [query, setQuery] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [language, setLanguage] = useState(\"en\");\n  const handleChat = async () => {\n    if (!query.trim()) return;\n    setLoading(true);\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/chat\", {\n        query\n      });\n      let reply = res.data.reply;\n\n      // Translate response if selected language is not English\n      if (language !== \"en\") {\n        reply = await translateText(reply, language);\n      }\n      setResponse(reply);\n      speak(reply);\n    } catch (error) {\n      setResponse(\"❌ Error: Unable to fetch response.\");\n    }\n    setLoading(false);\n  };\n\n  // Function to translate text using Google Translate API\n  const translateText = async (text, targetLang) => {\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/translate\", {\n        text,\n        targetLang\n      });\n      return res.data.translatedText;\n    } catch (error) {\n      console.error(\"Translation error:\", error);\n      return text; // Return original text if translation fails\n    }\n  };\n\n  // Function to speak the chatbot response\n  const speak = text => {\n    if (\"speechSynthesis\" in window) {\n      const speech = new SpeechSynthesisUtterance(text);\n      speech.lang = language === \"hi\" ? \"hi-IN\" : language === \"te\" ? \"te-IN\" : \"en-US\"; // Set correct language\n      window.speechSynthesis.speak(speech);\n    }\n  };\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"mt-4 d-flex flex-column align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"\\uD83D\\uDE97 AutoSage Chatbot\"), /*#__PURE__*/React.createElement(Form.Select, {\n    className: \"mb-3 w-50\",\n    value: language,\n    onChange: e => setLanguage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"en\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"English\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"hi\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Hindi\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"te\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Telugu\")), /*#__PURE__*/React.createElement(Card, {\n    className: \"p-4 shadow-lg w-75\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Ask about vehicles...\",\n    value: query,\n    onChange: e => setQuery(e.target.value),\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleChat,\n    disabled: loading,\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 22\n    }\n  }) : \"Ask\")), response && /*#__PURE__*/React.createElement(Card, {\n    className: \"mt-3 p-3 w-75\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"\\uD83D\\uDD39 Chatbot:\"), \" \", response, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    className: \"mt-2\",\n    onClick: () => speak(response),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"\\uD83D\\uDD0A Listen\")));\n}\nexport default GeminiChat;","map":{"version":3,"names":["React","useState","axios","Container","Form","Button","Card","Spinner","GeminiChat","query","setQuery","response","setResponse","loading","setLoading","language","setLanguage","handleChat","trim","res","post","reply","data","translateText","speak","error","text","targetLang","translatedText","console","window","speech","SpeechSynthesisUtterance","lang","speechSynthesis","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Select","value","onChange","e","target","Control","type","placeholder","onClick","disabled","variant","animation","size"],"sources":["C:/Users/yoges/OneDrive/Desktop/autosage/autosage-frontend/src/pages/GeminiChat.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container, Form, Button, Card, Spinner } from \"react-bootstrap\";\r\n\r\nfunction GeminiChat() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [response, setResponse] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [language, setLanguage] = useState(\"en\");\r\n\r\n  const handleChat = async () => {\r\n    if (!query.trim()) return;\r\n    setLoading(true);\r\n\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/chat\", { query });\r\n      let reply = res.data.reply;\r\n\r\n      // Translate response if selected language is not English\r\n      if (language !== \"en\") {\r\n        reply = await translateText(reply, language);\r\n      }\r\n\r\n      setResponse(reply);\r\n      speak(reply);\r\n    } catch (error) {\r\n      setResponse(\"❌ Error: Unable to fetch response.\");\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  // Function to translate text using Google Translate API\r\n  const translateText = async (text, targetLang) => {\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/translate\", {\r\n        text,\r\n        targetLang,\r\n      });\r\n      return res.data.translatedText;\r\n    } catch (error) {\r\n      console.error(\"Translation error:\", error);\r\n      return text; // Return original text if translation fails\r\n    }\r\n  };\r\n\r\n  // Function to speak the chatbot response\r\n  const speak = (text) => {\r\n    if (\"speechSynthesis\" in window) {\r\n      const speech = new SpeechSynthesisUtterance(text);\r\n      speech.lang = language === \"hi\" ? \"hi-IN\" : language === \"te\" ? \"te-IN\" : \"en-US\"; // Set correct language\r\n      window.speechSynthesis.speak(speech);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-4 d-flex flex-column align-items-center\">\r\n      <h2 className=\"mb-4\">🚗 AutoSage Chatbot</h2>\r\n\r\n      {/* Language Selection */}\r\n      <Form.Select className=\"mb-3 w-50\" value={language} onChange={(e) => setLanguage(e.target.value)}>\r\n        <option value=\"en\">English</option>\r\n        <option value=\"hi\">Hindi</option>\r\n        <option value=\"te\">Telugu</option>\r\n      </Form.Select>\r\n\r\n      <Card className=\"p-4 shadow-lg w-75\">\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Ask about vehicles...\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          className=\"mb-3\"\r\n        />\r\n        <Button onClick={handleChat} disabled={loading} variant=\"primary\">\r\n          {loading ? <Spinner animation=\"border\" size=\"sm\" /> : \"Ask\"}\r\n        </Button>\r\n      </Card>\r\n\r\n      {response && (\r\n        <Card className=\"mt-3 p-3 w-75\">\r\n          <strong>🔹 Chatbot:</strong> {response}\r\n          <Button variant=\"secondary\" className=\"mt-2\" onClick={() => speak(response)}>\r\n            🔊 Listen\r\n          </Button>\r\n        </Card>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default GeminiChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}