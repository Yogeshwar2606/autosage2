{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yoges\\\\OneDrive\\\\Desktop\\\\autosage\\\\autosage-frontend\\\\src\\\\pages\\\\GeminiChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Container, Form, Button, Card, Spinner } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GeminiChat() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [language, setLanguage] = useState(\"en\");\n  const [voices, setVoices] = useState([]);\n  useEffect(() => {\n    // Load available voices\n    const loadVoices = () => {\n      setVoices(window.speechSynthesis.getVoices());\n    };\n    loadVoices();\n    window.speechSynthesis.onvoiceschanged = loadVoices;\n  }, []);\n  const handleChat = async () => {\n    if (!query.trim()) return;\n    setLoading(true);\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/chat\", {\n        query\n      });\n      let reply = res.data.reply;\n      if (language !== \"en\") {\n        reply = await translateText(reply, language);\n      }\n      setResponse(reply);\n      speak(reply);\n    } catch (error) {\n      setResponse(\"❌ Error: Unable to fetch response.\");\n    }\n    setLoading(false);\n  };\n  const translateText = async (text, targetLang) => {\n    try {\n      const res = await fetch(`https://translate.googleapis.com/translate_a/single?client=gtx&sl=en&tl=${targetLang}&dt=t&q=${encodeURIComponent(text)}`);\n      const data = await res.json();\n      return data[0][0][0]; // Extract translated text\n    } catch (error) {\n      console.error(\"Translation error:\", error);\n      return text; // Return original text if translation fails\n    }\n  };\n  const speak = text => {\n    if (\"speechSynthesis\" in window) {\n      const speech = new SpeechSynthesisUtterance(text);\n      speech.lang = language === \"hi\" ? \"hi-IN\" : language === \"te\" ? \"te-IN\" : \"en-US\";\n      speech.voice = voices.find(v => v.lang.includes(speech.lang)) || null;\n      window.speechSynthesis.speak(speech);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4 d-flex flex-column align-items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"\\uD83D\\uDE97 AutoSage Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n      className: \"mb-3 w-50\",\n      value: language,\n      onChange: e => setLanguage(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"en\",\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"hi\",\n        children: \"Hindi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"te\",\n        children: \"Telugu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"p-4 shadow-lg w-75\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Ask about vehicles...\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        className: \"mb-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleChat,\n        disabled: loading,\n        variant: \"primary\",\n        children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          size: \"sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 22\n        }, this) : \"Ask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mt-3 p-3 w-75\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"\\uD83D\\uDD39 Chatbot:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), \" \", response, /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        className: \"mt-2\",\n        onClick: () => speak(response),\n        children: \"\\uD83D\\uDD0A Listen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(GeminiChat, \"9SeC3+VGclDXjg4ms8eOkfnlKhQ=\");\n_c = GeminiChat;\nexport default GeminiChat;\nvar _c;\n$RefreshReg$(_c, \"GeminiChat\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Form","Button","Card","Spinner","jsxDEV","_jsxDEV","GeminiChat","_s","query","setQuery","response","setResponse","loading","setLoading","language","setLanguage","voices","setVoices","loadVoices","window","speechSynthesis","getVoices","onvoiceschanged","handleChat","trim","res","post","reply","data","translateText","speak","error","text","targetLang","fetch","encodeURIComponent","json","console","speech","SpeechSynthesisUtterance","lang","voice","find","v","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Select","value","onChange","e","target","Control","type","placeholder","onClick","disabled","variant","animation","size","_c","$RefreshReg$"],"sources":["C:/Users/yoges/OneDrive/Desktop/autosage/autosage-frontend/src/pages/GeminiChat.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container, Form, Button, Card, Spinner } from \"react-bootstrap\";\r\n\r\nfunction GeminiChat() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [response, setResponse] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [language, setLanguage] = useState(\"en\");\r\n  const [voices, setVoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Load available voices\r\n    const loadVoices = () => {\r\n      setVoices(window.speechSynthesis.getVoices());\r\n    };\r\n    loadVoices();\r\n    window.speechSynthesis.onvoiceschanged = loadVoices;\r\n  }, []);\r\n\r\n  const handleChat = async () => {\r\n    if (!query.trim()) return;\r\n    setLoading(true);\r\n\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/chat\", { query });\r\n      let reply = res.data.reply;\r\n\r\n      if (language !== \"en\") {\r\n        reply = await translateText(reply, language);\r\n      }\r\n\r\n      setResponse(reply);\r\n      speak(reply);\r\n    } catch (error) {\r\n      setResponse(\"❌ Error: Unable to fetch response.\");\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const translateText = async (text, targetLang) => {\r\n    try {\r\n      const res = await fetch(\r\n        `https://translate.googleapis.com/translate_a/single?client=gtx&sl=en&tl=${targetLang}&dt=t&q=${encodeURIComponent(text)}`\r\n      );\r\n      const data = await res.json();\r\n      return data[0][0][0]; // Extract translated text\r\n    } catch (error) {\r\n      console.error(\"Translation error:\", error);\r\n      return text; // Return original text if translation fails\r\n    }\r\n  };\r\n\r\n  const speak = (text) => {\r\n    if (\"speechSynthesis\" in window) {\r\n      const speech = new SpeechSynthesisUtterance(text);\r\n      speech.lang = language === \"hi\" ? \"hi-IN\" : language === \"te\" ? \"te-IN\" : \"en-US\";\r\n      speech.voice = voices.find((v) => v.lang.includes(speech.lang)) || null;\r\n      window.speechSynthesis.speak(speech);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-4 d-flex flex-column align-items-center\">\r\n      <h2 className=\"mb-4\">🚗 AutoSage Chatbot</h2>\r\n\r\n      <Form.Select className=\"mb-3 w-50\" value={language} onChange={(e) => setLanguage(e.target.value)}>\r\n        <option value=\"en\">English</option>\r\n        <option value=\"hi\">Hindi</option>\r\n        <option value=\"te\">Telugu</option>\r\n      </Form.Select>\r\n\r\n      <Card className=\"p-4 shadow-lg w-75\">\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Ask about vehicles...\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          className=\"mb-3\"\r\n        />\r\n        <Button onClick={handleChat} disabled={loading} variant=\"primary\">\r\n          {loading ? <Spinner animation=\"border\" size=\"sm\" /> : \"Ask\"}\r\n        </Button>\r\n      </Card>\r\n\r\n      {response && (\r\n        <Card className=\"mt-3 p-3 w-75\">\r\n          <strong>🔹 Chatbot:</strong> {response}\r\n          <Button variant=\"secondary\" className=\"mt-2\" onClick={() => speak(response)}>\r\n            🔊 Listen\r\n          </Button>\r\n        </Card>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default GeminiChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}